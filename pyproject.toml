[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "digital-article-cli"
version = "1.0.0"
description = "Command-line tools for Digital Article notebook application"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Digital Article Team", email = "team@digitalarticle.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["notebook", "data-analysis", "bioinformatics", "jupyter", "cli"]
requires-python = ">=3.8"
dependencies = [
    "uvicorn[standard]>=0.20.0",
    "fastapi>=0.95.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/digitalarticle/digital-article"
Documentation = "https://docs.digitalarticle.dev"
Repository = "https://github.com/digitalarticle/digital-article.git"
"Bug Tracker" = "https://github.com/digitalarticle/digital-article/issues"

[project.scripts]
da-backend = "digital_article_cli.backend:main"
da-frontend = "digital_article_cli.frontend:main"

[tool.setuptools.packages.find]
include = ["digital_article_cli*"]

[tool.setuptools.package-data]
digital_article_cli = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
